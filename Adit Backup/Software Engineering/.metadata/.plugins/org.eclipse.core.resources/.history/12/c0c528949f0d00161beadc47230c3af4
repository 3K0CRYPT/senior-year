package CityEvac;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.ImageObserver;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import com.sun.prism.Graphics;

public class Engine {
	private ArrayList<Boolean> answer;
	public ArrayList<Route> routes;
	public static Frame frame;
	private int answerInt = 0;
	
	public Engine() {
		super();
		answer = new ArrayList<Boolean>();
		routes = new ArrayList<Route>();
		frame = new Frame();
		frame.setVisible(true);
		
		
		
		Random r = new Random();
		answerInt = r.nextInt(16);
		String s = toBin(answerInt);
		
//		for (int i = 0; i < 4; i++) {
//			answer.add(r.nextInt(2)==1);
//		}
		
		
		frame.setSize(new Dimension( 100*(answer.size()+1)+40,400));

		for (Boolean b: answer) {
			routes.add(new Route(b));
		}
		
		for (Route route: routes) {
			frame.add(route);					
		}			
		
		JButton submit = new JButton("SUBMIT");		
		ActionListener buttonListener = new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				ArrayList<Boolean> check = new ArrayList<Boolean>();
				for (Route route: routes) {
					check.add(route.up.isSelected());
				}
				if (check.equals(answer)) {
					JOptionPane.showMessageDialog(null, "You win!", "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
					System.exit(0);
				}
				else {
					JOptionPane.showMessageDialog(null, "You are responsible for several deaths.", "Sorry!", JOptionPane.INFORMATION_MESSAGE);
				}
			}			
		};		
		submit.addActionListener(buttonListener);
		frame.add(submit);		
		
		
		frame.setResizable(false);
		frame.setVisible(true);		
	}

	//For tests
	public Engine(ArrayList<Boolean> bools) {
		super();
		answer = new ArrayList<Boolean>(bools);
		routes = new ArrayList<Route>();
		frame = new Frame();
		frame.setVisible(true);	
		
		frame.setSize(new Dimension(100*answer.size(),300));

		for (Boolean b: answer) {
			routes.add(new Route(b));
		}
		
		for (Route route: routes) {
			frame.add(route);
			route.setVisible(true);			
		}
	}

	public int toDec(ArrayList<Boolean> bin) {
		int dec=0;
		for (int i = 0; i < bin.size(); i++) {
			if (bin.get(i)) { dec+= Math.pow(2,bin.size()-1-i); }
		}
		return dec;
	}
	
	public String toBin(int i) {		
		return Integer.toBinaryString(i);		
	}

	public Boolean compare(ArrayList<Boolean> b) {
		return b.equals(answer);
	}

	public ArrayList<Boolean> getAnswer() {
		return answer;
	}

	public static void main(String[] args) {
		Engine e = new Engine();	
		for (Boolean bool: e.getAnswer()) {
			System.out.println(bool);
		}
	}
}
